{"version":3,"file":"admin/additional.js","mappings":"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","sources":["webpack://wp-sameterm-pager/./src/admin/components/ApiCheck.js","webpack://wp-sameterm-pager/./src/admin/components/Navigation.js","webpack://wp-sameterm-pager/./src/admin/components/SaveConfirmation.js","webpack://wp-sameterm-pager/./src/admin/components/SelectorValidation.js","webpack://wp-sameterm-pager/external window \"ReactJSXRuntime\"","webpack://wp-sameterm-pager/external window [\"wp\",\"apiFetch\"]","webpack://wp-sameterm-pager/external window [\"wp\",\"components\"]","webpack://wp-sameterm-pager/external window [\"wp\",\"element\"]","webpack://wp-sameterm-pager/webpack/bootstrap","webpack://wp-sameterm-pager/webpack/runtime/compat get default export","webpack://wp-sameterm-pager/webpack/runtime/define property getters","webpack://wp-sameterm-pager/webpack/runtime/hasOwnProperty shorthand","webpack://wp-sameterm-pager/webpack/runtime/make namespace object","webpack://wp-sameterm-pager/./src/admin/additional.js"],"sourcesContent":["import { useState, useEffect } from '@wordpress/element';\r\nimport apiFetch from '@wordpress/api-fetch';\r\n\r\nexport const useApiCheck = () => {\r\n    const [isApiError, setIsApiError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        apiFetch({ path: '/wp/v2/settings' })\r\n            .then(() => {\r\n                setIsApiError(false);\r\n            })\r\n            .catch(() => {\r\n                setIsApiError(true);\r\n            });\r\n    }, []);\r\n\r\n    return isApiError;\r\n};\r\n","import { useState, useEffect } from '@wordpress/element';\r\nconst PageNavigation = () => {\r\n    const [currentPage, setCurrentPage] = useState('');\r\n\r\n    useEffect(() => {\r\n        // 現在のページURLのクエリパラメータから現在のページを特定\r\n        const params = new URLSearchParams(window.location.search);\r\n        setCurrentPage(params.get('page'));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"admin-sidebar\">\r\n            <h3>設定メニュー</h3>\r\n            <div className=\"tab-navigation\">\r\n                <a\r\n                    href=\"admin.php?page=wp_sameterm_pager\"\r\n                    className={currentPage === 'wp_sameterm_pager' ? 'active' : 'inactive'}\r\n                >\r\n                    一般設定\r\n                </a>\r\n                <a\r\n                    href=\"admin.php?page=wp_sameterm_pager_additional\"\r\n                    className={currentPage === 'wp_sameterm_pager_additional' ? 'active' : 'inactive'}\r\n                >\r\n                    追加設定\r\n                </a>\r\n                <a\r\n                    href=\"admin.php?page=wp_sameterm_pager_help\"\r\n                    className={currentPage === 'wp_sameterm_pager_help' ? 'active' : 'inactive'}\r\n                >\r\n                    ヘルプ\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageNavigation;","import { \r\n    useEffect\r\n} from '@wordpress/element';\r\nexport const useSaveConfirmation = (hasChanges) => {\r\n    useEffect(() => {\r\n        const handleBeforeUnload = (event) => {\r\n            if (hasChanges) {\r\n                event.preventDefault();\r\n                event.returnValue = ''; // 確認ダイアログを表示\r\n            }\r\n        };\r\n        \r\n        window.addEventListener('beforeunload', handleBeforeUnload);\r\n        return () => {\r\n            window.removeEventListener('beforeunload', handleBeforeUnload);\r\n        };\r\n    }, [hasChanges]);\r\n\r\n    const confirmSave = () => {\r\n        return window.confirm('本当に設定を保存しますか？');\r\n    };\r\n\r\n    return confirmSave;\r\n};\r\n","export const validateSelectors = (selectors) => {\r\n    const selectorPattern = /^[a-zA-Z0-9_\\-#.,: \\[\\]=\"']+$/;\r\n    return selectors.split(',').every(selector => selectorPattern.test(selector.trim()));\r\n};","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { \r\n    render,\r\n    useState,\r\n    useEffect\r\n} from '@wordpress/element';\r\nimport {\r\n    TextControl,\r\n    Button,\r\n    Notice,\r\n    Spinner\r\n} from '@wordpress/components';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport PageNavigation from './components/Navigation';  // 共通ナビゲーションのインポート\r\nimport { useSaveConfirmation } from './components/SaveConfirmation';\r\nimport { useApiCheck } from './components/ApiCheck';\r\nimport { validateSelectors } from './components/SelectorValidation';\r\n\r\nconst AdditionalSettings = () => {\r\n    const [useLinkClass, setUseLinkClass] = useState(smtrmPagerAdmin?.archive);\r\n    \r\n    // ローディング状態の管理\r\n    // const [isLoading, setIsLoading] = useState(false); \r\n    // ローディング状態、メッセージ状態の追加\r\n    const [isSaving, setIsSaving] = useState(false);\r\n    const [statusMessage, setStatusMessage] = useState(null);\r\n    const [hasChanges, setHasChanges] = useState(false);    // 変更があったかどうかのフラグ\r\n    // const [isApiError, setIsApiError] = useState(false); // REST APIエラーフラグ\r\n    const confirmSave = useSaveConfirmation(hasChanges);\r\n    const isApiError = useApiCheck();\r\n    \r\n    \r\n    // 画面遷移時に保存確認ダイアログを追加\r\n    // useEffect(() => {\r\n    //     const handleBeforeUnload = (event) => {\r\n    //         if (hasChanges) {\r\n    //             event.preventDefault();\r\n    //             event.returnValue = ''; // これを設定することで、確認ダイアログが表示される\r\n    //         }\r\n    //     };\r\n\r\n    //     window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    //     // クリーンアップ\r\n    //     return () => {\r\n    //         window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    //     };\r\n    // }, [hasChanges]);\r\n\r\n    // 初期設定を取得する処理    \r\n    // useEffect(() => {\r\n    //     setIsLoading(true);\r\n    //     apiFetch({ path: '/wp/v2/settings' })\r\n    //         .then(response => {\r\n    //             setUseLinkClass(response.smtrm_pager_entry_form);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             setStatusMessage({ type: 'error', text: '設定の取得に失敗しました。' });\r\n    //         })\r\n    //         .finally(() => {\r\n    //             // ローディング終了\r\n    //             setIsLoading(false);\r\n    //         });\r\n    // }, []);\r\n    // REST APIが動作しているか確認する処理\r\n    // useEffect(() => {\r\n    //     // setIsLoading(true);\r\n\r\n    //     apiFetch({ path: '/wp/v2/settings' })\r\n    //         .then(response => {\r\n    //             // 正常にAPIリクエストが成功した場合、設定値を取得\r\n    //             setIsApiError(false);  // エラーフラグをオフ\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             // APIリクエストが失敗した場合\r\n    //             console.error('API Fetch Error:', error);\r\n    //             setIsApiError(true);  // エラーフラグをオン\r\n    //         })\r\n    //         .finally(() => {\r\n    //             setIsLoading(false);  // ローディング終了\r\n    //         });\r\n    // }, []);\r\n    const onClick = async () => {\r\n        // if(useLinkClass){\r\n        //     // CSSセレクタ全般のバリデーション\r\n        //     const selectorPattern = /^[a-zA-Z0-9_\\-#.,: \\[\\]=\"']+$/;\r\n        \r\n        //     // カンマ区切りでセレクタを分割\r\n        //     const selectors = useLinkClass.split(',');\r\n        \r\n        //     // 各セレクタを検証\r\n        //     for (let selector of selectors) {\r\n        //         selector = selector.trim(); // セレクタの前後のスペースを削除\r\n        //         if (!selectorPattern.test(selector)) {\r\n        //             setStatusMessage({\r\n        //                 type: 'error',\r\n        //                 text: '無効なCSSセレクタがあります。セレクタには英字、数字、ID、クラス、属性セレクタ、擬似クラスが使用可能です。',\r\n        //             });\r\n        //             return;\r\n        //         }\r\n        //     }\r\n        // }\r\n        if (useLinkClass && !validateSelectors(useLinkClass)) {\r\n            setStatusMessage({\r\n                type: 'error',\r\n                text: '無効なCSSセレクタがあります。セレクタには英字、数字、ID、クラス、属性セレクタ、擬似クラスが使用可能です。',\r\n            });\r\n            return;\r\n        }\r\n    \r\n        // 保存確認ダイアログ\r\n        // if (!window.confirm('本当に設定を保存しますか？')) {\r\n        //     return;\r\n        // }\r\n        if (!confirmSave()) {\r\n            return;\r\n        }\r\n    \r\n        setIsSaving(true);\r\n        setStatusMessage(null);\r\n    \r\n        try {\r\n            const response = await apiFetch({\r\n                path: '/wp/v2/settings',\r\n                method: 'POST',\r\n                data: {\r\n                    'smtrm_pager_entry_form': useLinkClass,\r\n                },\r\n                headers: {\r\n                    'X-WP-Nonce': smtrmPagerAdmin.nonce // nonceを使用\r\n                }\r\n            });\r\n    \r\n            setStatusMessage({ type: 'success', text: '設定が保存されました！' });\r\n            setHasChanges(false);  // 変更フラグをリセット\r\n        } catch (error) {\r\n            // const errorMessage = error.message || '不明なエラーが発生しました。';\r\n            // setStatusMessage({ type: 'error', text: `保存に失敗しました: ${errorMessage}` });\r\n            let errorMessage = '設定の保存に失敗しました。';\r\n            // エラーオブジェクトの中身をデバッグ用に表示\r\n            const errorDetails = JSON.stringify(error, null, 2);  // エラーオブジェクト全体を文字列化\r\n            errorMessage += ': '+ JSON.stringify(error.message);  // エラーメッセージに詳細を追加\r\n            // エラーメッセージをセット\r\n            setStatusMessage({ type: 'error', text: errorMessage });\r\n            console.error('API Save Error:', error);  // コンソールにエラーログを出力\r\n            console.log(errorDetails);\r\n        } finally {\r\n            setIsSaving(false);\r\n        }\r\n    };\r\n\r\n    // ローディング中であればSpinnerを表示\r\n    // if (isLoading) {\r\n    //     return (\r\n    //         <div className=\"smtrm-admin-loading\">\r\n    //             <Spinner className=\"custom-spinner\" /> {/* ローディングインジケーター */}\r\n    //             <p>設定を読み込んでいます...</p>\r\n    //         </div>\r\n    //     );\r\n    // }\r\n\r\n    return (\r\n        <div className=\"smtrm-admin-wrapper\">\r\n            <div className=\"admin-content\">\r\n                <h1>Same Term Pagerプラグイン 追加設定ページ</h1>\r\n                {/* 保存成功/失敗メッセージの表示 */}\r\n                {statusMessage && (\r\n                    <Notice\r\n                        status={statusMessage.type}\r\n                        onRemove={() => setStatusMessage(null)}\r\n                    >\r\n                        {statusMessage.text}\r\n                    </Notice>\r\n                )}\r\n                {/* REST APIが無効な場合のエラーメッセージを設定画面の上部に表示 */}\r\n                {isApiError && (\r\n                    <Notice status=\"error\" isDismissible={false}>\r\n                        <p>REST APIが無効です。WordPress REST APIを有効にしてください。</p>\r\n                    </Notice>\r\n                )}\r\n                <h2>追加設定</h2>\r\n                <div className=\"setting-wrapper\">\r\n                    <div className=\"setting-box\">\r\n                        <h3>アーカイブページ設定</h3>\r\n                        <TextControl\r\n                            label=\"絞り込み機能が動作しない場合に使用するCSSセレクタ (カンマ区切りで複数指定可能)\"\r\n                            value={useLinkClass}\r\n                            disabled={isSaving || isApiError}\r\n                            onChange={(value) => {\r\n                                setUseLinkClass(value);\r\n                                setHasChanges(true);  // 変更があったことを通知\r\n                            }}\r\n                            placeholder=\"例: .class1, .class2, .class3\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Button\r\n                        isPrimary\r\n                        onClick={onClick}\r\n                        disabled={isSaving || isApiError}\r\n                    >\r\n                        {isSaving ? (\r\n                            <>\r\n                                <Spinner /> 保存中…\r\n                            </>\r\n                        ) : (\r\n                            '保存'\r\n                        )}\r\n                    </Button>\r\n            </div>\r\n            {/* 右カラム（ナビゲーション） */}\r\n            <PageNavigation />\r\n        </div>\r\n    );\r\n};\r\n\r\n// エントリーポイントにレンダリング\r\nrender(<AdditionalSettings />, document.getElementById('smtrm-pager-additional'));\r\n\r\n"],"names":["useState","useEffect","apiFetch","useApiCheck","isApiError","setIsApiError","path","then","catch","jsx","_jsx","jsxs","_jsxs","PageNavigation","currentPage","setCurrentPage","params","URLSearchParams","window","location","search","get","className","children","href","useSaveConfirmation","hasChanges","handleBeforeUnload","event","preventDefault","returnValue","addEventListener","removeEventListener","confirmSave","confirm","validateSelectors","selectors","selectorPattern","split","every","selector","test","trim","render","TextControl","Button","Notice","Spinner","Fragment","_Fragment","AdditionalSettings","useLinkClass","setUseLinkClass","smtrmPagerAdmin","archive","isSaving","setIsSaving","statusMessage","setStatusMessage","setHasChanges","onClick","type","text","response","method","data","headers","nonce","error","errorMessage","errorDetails","JSON","stringify","message","console","log","status","onRemove","isDismissible","label","value","disabled","onChange","placeholder","isPrimary","document","getElementById"],"sourceRoot":""}